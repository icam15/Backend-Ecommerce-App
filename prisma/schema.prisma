// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ECOMMERCEADMIN
  STOREADMIN
  CUSTOMER
}

enum UserStatus {
  VERIFIED
  UNVERIFIED
}

model User{
  id Int @id @default(autoincrement())
  email String @unique
  password String @db.Text
  imageUrl String? @map("image_url") @db.Text
  role UserRole @default(CUSTOMER)
  displayName String @map("dispaly_name") @db.VarChar(12)
  isVerified UserStatus @default(UNVERIFIED)
  phoneNumber String? @map("phone_number")
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt 

  //Relation
  userToken UserToken?
  address Address[]

  @@map("user")

}

model UserToken{
  id Int @unique @default(autoincrement())
  userId Int @unique @map("user_id")
  verifyToken String? @map("verify_token")
  resetPasswordToken String? @map("reset_password_token")
  refreshToken String? @map("refresh_token")
  refreshToken_exp DateTime?

  //Relation 
  user User @relation(fields: [userId], references: [id])

  @@map("user_token")
}

model Address {
  id Int @id @default(autoincrement())
  userId Int @unique @map("user_id")
  address String @db.Text
  phone String @map("home_phone")
  note String @db.Text
  isMainAddress Boolean @default(false)
  postalCode String @map("postal_code")
  city String 
  province String
  longitude Float
  latitude Float
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  // Relation
  user User @relation(fields: [userId], references: [id])

  @@map("address")
}